class BoardValues:

    def __init__(self):
        # Таблица значений пешки (Pawn piece-square table).
        # Эти значения представляют "стоимость" пешки, находящейся на определённой клетке.
        # Высокие положительные значения указывают на клетки, где пешки обычно выгодны.
        # Низкие/отрицательные значения указывают на клетки, где пешки обычно невыгодны.
        self.Pawn = [0,  0,   0,   0,   0,   0,  0, 0,
                     5, 10,  10, -20, -20,  10, 10, 5,
                     5, -5, -10,   0,   0, -10, -5, 5,
                     0,  0,   0,  20,  20,   0,  0, 0,
                     5,  5,  10,  25,  25,  10,  5, 5,
                     10,10,  20,  30,  30,  20, 10,10,
                     50,50,  50,  50,  50,  50, 50,50,
                     0,  0,  0,    0,   0,   0,  0, 0
                     ]
        # Таблица значений коня.
        # Здесь показаны типичные значения для коня в различных местах на доске.
        # Кони, находящиеся в центре и продвинутые вперед, часто более ценны, чем те, что по краям.
        self.Knight = [-50, -40, -30, -30, -30, -30, -40, -50,
                       -40, -20,   0,   0,   0,   0, -20, -40,
                       -30,   5,  10,  15,  15,  10,   5, -30,
                       -30,   0,  15,  20,  20,  15,   0, -30,
                       -30,   5,  15,  20,  20,  15,   5, -30,
                       -30,   0,  10,  15,  15,  10,   0, -30,
                       -40, -20,   0,   5,   5,   0, -20, -40,
                       -50, -40, -30, -30, -30, -30, -40, -50
                       ]
        # Таблица значений слона.
        # Слоны приобретают ценность, когда они размещены на длинных диагоналях и ближе к центру.
        self.Bishop = [-20,-10,-10,-10,-10,-10,-10,-20,
                       -10,  5,  0,  0,  0,  0,  5,-10,
                       -10, 10, 10, 10, 10, 10, 10,-10,
                       -10,  0, 10, 10, 10, 10,  0,-10,
                       -10,  5,  5, 10, 10,  5,  5,-10,
                       -10,  0,  5, 10, 10,  5,  0,-10,
                       -10,  0,  0,  0,  0,  0,  0,-10,
                       -20,-10,-10,-10,-10,-10,-10,-20
                       ]
        # Таблица значений ладьи.
        # Ладьи обычно становятся более ценными, когда они могут контролировать столбцы или строки.
        self.Rook = [ 0, 0,  0,  5,  5,  0,  0,  0,
                     -5, 0,  0,  0,  0,  0,  0, -5,
                     -5, 0,  0,  0,  0,  0,  0, -5,
                     -5, 0,  0,  0,  0,  0,  0, -5,
                     -5, 0,  0,  0,  0,  0,  0, -5,
                     -5, 0,  0,  0,  0,  0,  0, -5,
                      5,10, 10, 10, 10, 10, 10,  5,
                      0, 0,  0,  0,  0,  0,  0,  0
                     ]
        # Таблица значений ферзя.
        # Ферзь обычно более ценен в центре доски, где может контролировать больше клеток.
        self.Queen = [-10,   5,   5,  5,  5,   5,   0, -10,
                      -10,   0,   5,  0,  0,   0,   0, -10,
                        0,   0,   5,  5,  5,   5,   0,  -5,
                       -5,   0,   5,  5,  5,   5,   0,  -5,
                      -10,   0,   0,  0,  0,   0,   0, -10,
                      -10,   0,   5,  5,  5,   5,   0, -10,
                      -20, -10, -10, -5, -5, -10, -10, -20,
                      -20, -10, -10, -5, -5, -10, -10, -20
                      ]
        # Таблица значений короля в начале партии.
        # Король в начале игры ценится выше на задней линии и центре, чтобы избежать шаха и мата.
        self.KingEarly = [ 20,  30,  10,   0,   0,  10,  30,  20,
                           20,  20,   0,   0,   0,   0,  20,  20,
                          -10, -20, -20, -20, -20, -20, -20, -10,
                          -20, -30, -30, -40, -40, -30, -30, -20,
                          -30, -40, -40, -50, -50, -40, -40, -30,
                          -30, -40, -40, -50, -50, -40, -40, -30,
                          -30, -40, -40, -50, -50, -40, -40, -30,
                          -30, -40, -40, -50, -50, -40, -40, -30
                          ]
        # Таблица значений короля в конце партии.
        # В конечной стадии игры король становится более активной фигурой и ценится выше в центре доски.
        self.KingLate = [-50, -30,-30,-30,-30,-30, -30, -50,
                         -30, -30,  0,  0,  0,  0, -30, -30,
                         -30, -10, 20, 30, 30, 20, -10, -30,
                         -30, -10, 30, 40, 40, 30, -10, -30,
                         -30, -10, 30, 40, 40, 30, -10, -30,
                         -30, -10, 20, 30, 30, 20, -10, -30,
                         -30, -20,-10,  0,  0,-10, -20, -30,
                         -50, -40,-30,-20,-20,-30, -40, -50
                         ]
